class Solution {
        public static int fn(int coins[], int amount , int idx, int dp[][]) {
        // base case
        if(amount ==0) return 1;
        if(idx <0) {
            return 0;
            
        }
        // choices 
        if(dp[idx][amount] != -1) return dp[idx][amount];

        int notPick = fn(coins, amount , idx-1, dp);
        int pick = 0;
        if(amount >= coins[idx]) {
            pick =  fn(coins, amount - coins[idx], idx, dp);
        }
        return dp[idx][amount] = pick + notPick;
        }
    public int change(int amount, int[] coins) {
        int n = coins.length;
        int dp[][] = new int[n][amount +1];

        for(int i=0; i<n; i++) {
                Arrays.fill(dp[i], -1);
        }

        return fn(coins, amount, n-1, dp);
    }
}